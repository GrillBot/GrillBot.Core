name: Build and push to NuGet

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

jobs:
  CheckNugetPublishPossibility:
    runs-on: ubuntu-latest
    outputs:
      CorePackage: ${{ steps.filter.outputs.CorePackage }}
      ServicesPackage: ${{ steps.filter.outputs.ServicesPackage }}
      RabbitMQPackage: ${{ steps.filter.outputs.RabbitMQpackage }}
      RedisPackage: ${{ steps.filter.outputs.RedisPackage }}
      MetricsPackage: ${{ steps.filter.outputs.MetricsPackage }}
      RabbitV2Package: ${{ steps.filter.outputs.RabbitV2Package }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Paths filter
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            CorePackage:
              - 'GrillBot.Core/GrillBot.Core.csproj'
            ServicesPackage:
              - 'GrillBot.Core.Services/GrillBot.Core.Services.csproj'
            RabbitMQPackage:
              - 'GrillBot.Core.RabbitMQ/GrillBot.Core.RabbitMQ.csproj'
            RedisPackage:
              - 'GrillBot.Core.Redis/GrillBot.Core.Redis.csproj'
            MetricsPackage:
              - 'GrillBot.Core.Metrics/GrillBot.Core.Metrics.csproj'
            RabbitV2Package:
              - 'GrillBot.Core.RabbitMQ.V2/GrillBot.Core.RabbitMQ.V2.csproj'
  BuildPackages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: GrillBot.Core
        run: |
          dotnet restore -r linux-x64 GrillBot.Core/
          dotnet restore -r linux-x64 GrillBot.Core.Tests/
          dotnet build -c Release --no-self-contained GrillBot.Core/
          dotnet build -c Release --no-self-contained GrillBot.Core.Tests/
      - name: GrillBot.Core.RabbitMQ
        run: |
          dotnet restore -r linux-x64 GrillBot.Core.RabbitMQ/
          dotnet build -c Release --no-self-contained GrillBot.Core.RabbitMQ/
      - name: GrillBot.Core.Services
        run: |
          dotnet restore -r linux-x64 GrillBot.Core.Services/
          dotnet build -c Release --no-self-contained GrillBot.Core.Services/
      - name: GrillBot.Core.Redis
        run: |
          dotnet restore -r linux-x64 GrillBot.Core.Redis/
          dotnet restore -r linux-x64 GrillBot.Core.Redis.Tests/
          dotnet build -c Release --no-self-contained GrillBot.Core.Redis/
          dotnet build -c Release --no-self-contained GrillBot.Core.Redis.Tests/
      - name: GrillBot.Core.RabbitMQ.V2
        run: |
          dotnet restore -r linux-x64 GrillBot.Core.RabbitMQ.V2/
          dotnet build -c Release --no-self-contained GrillBot.Core.RabbitMQ.V2/
  TestPackages:
    runs-on: ubuntu-latest
    needs: [BuildPackages]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: GrillBot.Core
        run: dotnet test -c Debug GrillBot.Core.Tests/
      - name: GrillBot.Core.Redis
        run: dotnet test -c Debug GrillBot.Core.Redis.Tests/
  PublishPackages:
    runs-on: ubuntu-latest
    needs: [CheckNugetPublishPossibility, BuildPackages, TestPackages]
    if: github.ref == 'refs/heads/master'
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          source-url: https://nuget.pkg.github.com/GrillBot/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: GrillBot.Core
        if: needs.CheckNugetPublishPossibility.outputs.CorePackage == 'true'
        run: |
          dotnet restore -r linux-x64 GrillBot.Core/
          dotnet build -c Release -r linux-x64 --no-self-contained --no-restore GrillBot.Core/
          dotnet pack -c Release --nologo --include-symbols GrillBot.Core/
          dotnet nuget push GrillBot.Core/bin/Release/*.nupkg --skip-duplicate
      - name: GrillBot.Core.RabbitMQ
        if: needs.CheckNugetPublishPossibility.outputs.RabbitMQPackage == 'true'
        run: |
          dotnet restore -r linux-x64 GrillBot.Core.RabbitMQ/
          dotnet build -c Release -r linux-x64 --no-self-contained --no-restore GrillBot.Core.RabbitMQ/
          dotnet pack -c Release --nologo --include-symbols GrillBot.Core.RabbitMQ/
          dotnet nuget push GrillBot.Core.RabbitMQ/bin/Release/*.nupkg --skip-duplicate
      - name: GrillBot.Core.Services
        if: needs.CheckNugetPublishPossibility.outputs.ServicesPackage == 'true'
        run: |
          dotnet restore -r linux-x64 GrillBot.Core.Services/
          dotnet build -c Release -r linux-x64 --no-self-contained --no-restore GrillBot.Core.Services/
          dotnet pack -c Release --nologo --include-symbols GrillBot.Core.Services/
          dotnet nuget push GrillBot.Core.Services/bin/Release/*.nupkg --skip-duplicate
      - name: GrillBot.Core.Redis
        if: needs.CheckNugetPublishPossibility.outputs.RedisPackage == 'true'
        run: |
          dotnet restore -r linux-x64 GrillBot.Core.Redis/
          dotnet build -c Release -r linux-x64 --no-self-contained --no-restore GrillBot.Core.Redis/
          dotnet pack -c Release --nologo --include-symbols GrillBot.Core.Redis/
          dotnet nuget push GrillBot.Core.Redis/bin/Release/*.nupkg --skip-duplicate
      - name: GrillBot.Core.Metrics
        if: needs.CheckNugetPublishPossibility.outputs.MetricsPackage == 'true'
        run: |
          dotnet restore -r linux-x64 GrillBot.Core.Metrics/
          dotnet build -c Release -r linux-x64 --no-self-contained --no-restore GrillBot.Core.Metrics/
          dotnet pack -c Release --nologo --include-symbols GrillBot.Core.Metrics/
          dotnet nuget push GrillBot.Core.Metrics/bin/Release/*.nupkg --skip-duplicate
      - name: GrillBot.Core.RabbitMQ.V2
        if: needs.CheckNugetPublishPossibility.outputs.RabbitV2Package == 'true'
        run: |
            dotnet restore -r linux-x64 GrillBot.Core.RabbitMQ.V2/
            dotnet build -c Release -r linux-x64 --no-self-contained --no-restore GrillBot.Core.RabbitMQ.V2/
            dotnet pack -c Release --nologo --include-symbols GrillBot.Core.RabbitMQ.V2/
            dotnet nuget push GrillBot.Core.RabbitMQ.V2/bin/Release/*.nupkg --skip-duplicate
